trigger:
- develop

pool:
  vmImage: 'Ubuntu-16.04'

variables:
  imageName: 'service-sim:$(build.buildNumber)'
  latestImageName: 'service-sim:$(build.buildNumber)'
  buildEnvImageName: 'service-sim:build'

steps:
- script: docker login -u $(docker.registry.userName) -p $(docker.registry.password) $(docker.registry.url)
  displayName: 'docker login'

- script: docker pull $(docker.registry.url)/$(buildEnvImageName) || true
  displayName: 'docker pull build'

- script: >
    docker build
    --target build
    -t $(docker.registry.url)/$(buildEnvImageName)
    --cache-from $(docker.registry.url)/$(buildEnvImageName)
    .
  displayName: 'docker build build'

- script: docker push $(docker.registry.url)/$(buildEnvImageName)
  displayName: 'docker publish build'

- script: docker pull $(docker.registry.url)/$(latestImageName) || true
  displayName: 'docker pull latest dist'

- script: >
    docker build
    -t $(docker.registry.url)/$(imageName)
    -t $(docker.registry.url)/$(latestImageName)
    --cache-from $(docker.registry.url)/$(buildEnvImageName)
    --cache-from $(docker.registry.url)/$(latestImageName)
    .
  displayName: 'docker build dist'

- script: |
    docker push $(docker.registry.url)/$(imageName)
    docker push $(docker.registry.url)/$(latestImageName)
  displayName: 'docker publish dist'
