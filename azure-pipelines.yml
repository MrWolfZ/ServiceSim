trigger:
- develop

pool:
  vmImage: 'Ubuntu-16.04'

variables:
  imageName: 'service-sim:$(build.buildNumber)'
  latestImageName: 'service-sim:$(build.buildNumber)'
  buildEnvImageName: 'service-sim:build-env'

steps:
- script: |
    docker login -u $(docker.registry.userName) -p $(docker.registry.password) $(docker.registry.url)
    docker pull $(docker.registry.url)/$(buildEnvImageName)
    >
    docker build
    --target build-env
    -t $(docker.registry.url)/$(buildEnvImageName)
    --cache-from $(docker.registry.url)/$(buildEnvImageName) .
  displayName: 'docker build build-env'

- script: |
    docker login -u $(docker.registry.userName) -p $(docker.registry.password) $(docker.registry.url)
    docker pull $(docker.registry.url)/$(latestImageName)
    >
    docker build
    -t $(docker.registry.url)/$(imageName)
    -t $(docker.registry.url)/$(latestImageName)
    --cache-from $(docker.registry.url)/$(buildEnvImageName)
    --cache-from $(docker.registry.url)/$(latestImageName) .
  displayName: 'docker build'

- script: |
    docker login -u $(docker.registry.userName) -p $(docker.registry.password) $(docker.registry.url)
    docker push $(docker.registry.url)/$(imageName)
    docker push $(docker.registry.url)/$(latestImageName)
    docker push $(docker.registry.url)/$(buildEnvImageName)
  displayName: 'docker publish'
