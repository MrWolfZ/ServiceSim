import { Injectable } from '@angular/core';
import { CanActivate } from '@angular/router';
import { ActionsSubject } from '@ngrx/store';
import { first, map } from 'rxjs/operators';

import { HandleApiErrorAction } from 'app/infrastructure';

import { <%= initializationAction(name) %>, <%= loadAction(name) %> } from './<%= actionsFileNoExt(name) %>';

@Injectable()
export class <%= guard(name) %> implements CanActivate {
  constructor(private actionsSubject: ActionsSubject) { }

  canActivate() {
    this.actionsSubject.next(new <%= loadAction(name) %>());
    return this.actionsSubject.pipe(
      first(a => a.type === <%= initializationAction(name) %>.TYPE || a.type === HandleApiErrorAction.TYPE),
      map(a => a.type === <%= initializationAction(name) %>.TYPE),
    );
  }
}
